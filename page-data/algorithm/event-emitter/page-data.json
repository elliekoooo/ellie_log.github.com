{"componentChunkName":"component---src-pages-index-tsx","path":"/algorithm/event-emitter/","result":{"data":{"markdownRemark":{"id":"753cfefb-9f36-55c0-8610-fb5f21933d29","rawMarkdownBody":"\n# Event Emitter\n\n_Reference; Leet code_\n\n### Approach\n\n\n전역변수로 events 배열을 만들어서, eventName을 키로, Callback 함수를 값으로 하는 object를 push한다. \n\n결과적으로 이러한 형태가 된다.\n\n```typescript\n\nevents = [\n\teventName1: [callback1, callback2...]\n  \teventName2: [callback3, callback4...]\n\t...\n]  \n```\n\nunsubscribe는 간단히 pop()을 활용한다.\n\nemit은 events 배열에 저장된 함수들을 실행시켜주면 된다.\n\n\n\n\n### Code\n\n```typescript\n\ntype Callback = (...args: any[]) => any;\ntype Subscription = {\n    unsubscribe: () => void\n}\n\nclass EventEmitter {\n  events: any[] = [{}];\n\n  subscribe(eventName: string, callback: Callback): Subscription {  \n    if(callback == undefined)\n      return;\n    \n    if(this.events[eventName] == undefined)\n      this.events[eventName] = [];\n\n    this.events[eventName].push(callback);\n\n    return {\n      unsubscribe: () => {\n        this.events[eventName]?.pop();\n      }\n    };\n  }\n\n  emit(eventName: string, args: any[] = []): any {\n    return this.events[eventName]?.map(callback => callback(...args)) ?? [];\n  }\n}\n\n\n```","frontmatter":{"category":"algorithm"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#event-emitter\">Event Emitter</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#approach\">Approach</a></li>\n<li><a href=\"#code\">Code</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"event-emitter\" style=\"position:relative;\"><a href=\"#event-emitter\" aria-label=\"event emitter permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Event Emitter</h1>\n<p><em>Reference; Leet code</em></p>\n<h3 id=\"approach\" style=\"position:relative;\"><a href=\"#approach\" aria-label=\"approach permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Approach</h3>\n<p>전역변수로 events 배열을 만들어서, eventName을 키로, Callback 함수를 값으로 하는 object를 push한다.</p>\n<p>결과적으로 이러한 형태가 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">\nevents <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n\teventName1<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>callback1<span class=\"token punctuation\">,</span> callback2<span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n  \teventName2<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>callback3<span class=\"token punctuation\">,</span> callback4<span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">]</span>  </code></pre></div>\n<p>unsubscribe는 간단히 pop()을 활용한다.</p>\n<p>emit은 events 배열에 저장된 함수들을 실행시켜주면 된다.</p>\n<h3 id=\"code\" style=\"position:relative;\"><a href=\"#code\" aria-label=\"code permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Callback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Subscription</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">unsubscribe</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">EventEmitter</span> <span class=\"token punctuation\">{</span>\n  events<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>eventName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> callback<span class=\"token operator\">:</span> Callback<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Subscription <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>callback <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">[</span>eventName<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">[</span>eventName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">[</span>eventName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">unsubscribe</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">[</span>eventName<span class=\"token punctuation\">]</span><span class=\"token operator\">?.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">emit</span><span class=\"token punctuation\">(</span>eventName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> args<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">[</span>eventName<span class=\"token punctuation\">]</span><span class=\"token operator\">?.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>callback <span class=\"token operator\">=></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>"}},"pageContext":{"id":"753cfefb-9f36-55c0-8610-fb5f21933d29","slug":"/algorithm/event-emitter/","category":"algorithm"}},"staticQueryHashes":["1975914579"],"slicesMap":{}}