{"componentChunkName":"component---src-pages-index-tsx","path":"/javascript/function/","result":{"data":{"markdownRemark":{"id":"26c7c476-5dca-524a-9f14-e894fe48f9d1","rawMarkdownBody":"\n# Function \n\n### Function\n\n| function statement                          \t| function expression                                \t| function()                                        \t|\n|---------------------------------------------\t|----------------------------------------------------\t|---------------------------------------------------\t|\n| function add(x,y) {<br>  return x + y;<br>} \t| var add = function(x,y) {<br>  return x + y;<br>}; \t| var add = new Function('x', 'y', 'return x + y'); \t|\n\n### Function hoisting\n\n- 함수 선언문 형태로 정의한 함수의 유효 범위는 코드의 맨처음부터 시작\n- 이러한 함수 호이스팅은 함수는 실행되기전에 선언되어야한다는 규칙을 무시하여 코드의 구조를 망칠수있음 -> **아래와 같은 함수 표현식 사용을 권장**\n- 해당 현상의 원인은 자바스크립트의 변수 생성(Instantiation)과 초기화(Initialization)의 작업이 분리되어 진행되기 때문임\n\n```javascript\n\nadd(2,5); // uncaught type error\n\nvar add = function(x, y) {\n    return x + y;\n}\n\nadd(2,5); // 7\n\n```\n\n### Function = Object\n\n- 함수 자체가 일반 객체처럼 프로퍼티를 가질 수 있음\n\n```javascript\n\nfunction add(x, y) {\n    return x + y;\n}\n\nadd.result = add(3, 2);\nadd.status = 'OK';\n```\n\n- 위의 코드에서 함수 add가 객체로서 가지는 프로퍼티는 총 3개이다.\n\n[[Code]] ---> return x + y; //내부 프로퍼티 \nresult ---> 5\nstatus ---> 'OK'\n\n- 함수는 값으로 취급될 수 있음\n    - 리터럴에 의해 생성\n    - 변수나 배열의 요소, 객체의 프로퍼티 등에 할당 가능\n    - 함수의 리턴값으로 리턴 가능\n    - 동적으로 프로퍼티를 생성 및 할당 가능\n    - 함수의 인자로 전달 가능\n\n","frontmatter":{"category":"javascript"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#function\">Function</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#function-1\">Function</a></li>\n<li><a href=\"#function-hoisting\">Function hoisting</a></li>\n<li><a href=\"#function--object\">Function = Object</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"function\" style=\"position:relative;\"><a href=\"#function\" aria-label=\"function permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Function</h1>\n<h3 id=\"function-1\" style=\"position:relative;\"><a href=\"#function-1\" aria-label=\"function 1 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Function</h3>\n<table>\n<thead>\n<tr>\n<th>function statement</th>\n<th>function expression</th>\n<th>function()</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>function add(x,y) {<br>  return x + y;<br>}</td>\n<td>var add = function(x,y) {<br>  return x + y;<br>};</td>\n<td>var add = new Function('x', 'y', 'return x + y');</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"function-hoisting\" style=\"position:relative;\"><a href=\"#function-hoisting\" aria-label=\"function hoisting permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Function hoisting</h3>\n<ul>\n<li>함수 선언문 형태로 정의한 함수의 유효 범위는 코드의 맨처음부터 시작</li>\n<li>이러한 함수 호이스팅은 함수는 실행되기전에 선언되어야한다는 규칙을 무시하여 코드의 구조를 망칠수있음 -> <strong>아래와 같은 함수 표현식 사용을 권장</strong></li>\n<li>해당 현상의 원인은 자바스크립트의 변수 생성(Instantiation)과 초기화(Initialization)의 작업이 분리되어 진행되기 때문임</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// uncaught type error</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 7</span>\n</code></pre></div>\n<h3 id=\"function--object\" style=\"position:relative;\"><a href=\"#function--object\" aria-label=\"function  object permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Function = Object</h3>\n<ul>\n<li>함수 자체가 일반 객체처럼 프로퍼티를 가질 수 있음</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nadd<span class=\"token punctuation\">.</span>result <span class=\"token operator\">=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nadd<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">'OK'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>위의 코드에서 함수 add가 객체로서 가지는 프로퍼티는 총 3개이다.</li>\n</ul>\n<p>[[Code]] ---> return x + y; //내부 프로퍼티\nresult ---> 5\nstatus ---> 'OK'</p>\n<ul>\n<li>함수는 값으로 취급될 수 있음\n<ul>\n<li>리터럴에 의해 생성</li>\n<li>변수나 배열의 요소, 객체의 프로퍼티 등에 할당 가능</li>\n<li>함수의 리턴값으로 리턴 가능</li>\n<li>동적으로 프로퍼티를 생성 및 할당 가능</li>\n<li>함수의 인자로 전달 가능</li>\n</ul>\n</li>\n</ul>"}},"pageContext":{"id":"26c7c476-5dca-524a-9f14-e894fe48f9d1","slug":"/javascript/function/","category":"javascript"}},"staticQueryHashes":["1975914579"],"slicesMap":{}}